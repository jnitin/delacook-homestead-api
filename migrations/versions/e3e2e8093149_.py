"""empty message

Revision ID: e3e2e8093149
Revises: 9f59bd0c5d37
Create Date: 2017-07-20 17:56:30.600995

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e3e2e8093149'
down_revision = '9f59bd0c5d37'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plantingnotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_cloning_fk', sa.Integer(), nullable=True),
    sa.Column('note_date', sa.DateTime(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plant_cloning_fk'], ['plantings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plantnotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_cloning_fk', sa.Integer(), nullable=True),
    sa.Column('note_date', sa.DateTime(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plant_cloning_fk'], ['plants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plantcloningnotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('plant_cloning_fk', sa.Integer(), nullable=True),
    sa.Column('note_date', sa.DateTime(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plant_cloning_fk'], ['plantclonings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('plantclones', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('plantclones', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('plantclonings', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('plantclonings', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('plantgenerations', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('plantgenerations', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('plantharvests', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('plantharvests', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('plantingphysicalsources', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('plantingphysicalsources', sa.Column('enum', sa.String(), nullable=False))
    op.add_column('plantingphysicalsources', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('plantingphysicalsources', sa.Column('name', sa.String(), nullable=False))
    op.add_column('plantings', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('plantings', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('plantings', sa.Column('planting_physical_source_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'plantings', 'plantingphysicalsources', ['planting_physical_source_fk'], ['id'])
    op.add_column('plantingsources', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('plantingsources', sa.Column('modified', sa.DateTime(), nullable=True))
    op.add_column('plantingsources', sa.Column('name', sa.String(), nullable=False))
    op.add_column('plantingsources', sa.Column('planting_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'plantingsources', 'plantings', ['planting_fk'], ['id'])
    op.add_column('plantlineages', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('plantlineages', sa.Column('modified', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('plantlineages', 'modified')
    op.drop_column('plantlineages', 'created')
    op.drop_constraint(None, 'plantingsources', type_='foreignkey')
    op.drop_column('plantingsources', 'planting_fk')
    op.drop_column('plantingsources', 'name')
    op.drop_column('plantingsources', 'modified')
    op.drop_column('plantingsources', 'created')
    op.drop_constraint(None, 'plantings', type_='foreignkey')
    op.drop_column('plantings', 'planting_physical_source_fk')
    op.drop_column('plantings', 'modified')
    op.drop_column('plantings', 'created')
    op.drop_column('plantingphysicalsources', 'name')
    op.drop_column('plantingphysicalsources', 'modified')
    op.drop_column('plantingphysicalsources', 'enum')
    op.drop_column('plantingphysicalsources', 'created')
    op.drop_column('plantharvests', 'modified')
    op.drop_column('plantharvests', 'created')
    op.drop_column('plantgenerations', 'modified')
    op.drop_column('plantgenerations', 'created')
    op.drop_column('plantclonings', 'modified')
    op.drop_column('plantclonings', 'created')
    op.drop_column('plantclones', 'modified')
    op.drop_column('plantclones', 'created')
    op.drop_table('plantcloningnotes')
    op.drop_table('plantnotes')
    op.drop_table('plantingnotes')
    # ### end Alembic commands ###
